{"ast":null,"code":"const reducer = (state, action) => {\n  const data = action.payload;\n  switch (action.type) {\n    case \"SEARCH\":\n      return {\n        ...state,\n        searchValue: data,\n        searchedItem: []\n      };\n    case \"UPDATESEARCH\":\n      let addedItem = [...state.searchedItem];\n      state.products.forEach(item => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      return {\n        ...state,\n        searchedItem: addedItem\n      };\n    case \"REMOVEITEM\":\n      const newDeletedData = state.products.filter(item => item.PId !== action.payload);\n      return {\n        ...state,\n        products: newDeletedData\n      };\n\n    // case \"TOGGLE\":\n    //   let newVal;\n    //   let newToggle = state.products.map((item) => {\n    //     if (item.PId === data) {\n    //       newVal = item.UpdateToggle ? false : true;\n    //       return { ...item, UpdateToggle: newVal };\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n    //   console.log(\"newToggle\", newToggle);\n    //   return { ...state, products: newToggle };\n\n    case \"UPDATE\":\n      let id = action.payload.PId;\n      console.log(\"print id\", id);\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n      let update = state.products.map(item => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price\n          };\n        } else return item;\n      });\n      return {\n        ...state,\n        products: update\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","data","payload","type","searchValue","searchedItem","addedItem","products","forEach","item","PName","includes","newDeletedData","filter","PId","id","console","log","newName","newPrice","Price","update","map"],"sources":["/home/sameer/Desktop/chakraRedux/src/reducer/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\n  const data = action.payload;\n  switch (action.type) {\n    case \"SEARCH\":\n      return { ...state, searchValue: data, searchedItem: [] };\n\n    case \"UPDATESEARCH\":\n      let addedItem = [...state.searchedItem];\n      state.products.forEach((item) => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      return { ...state, searchedItem: addedItem };\n\n    case \"REMOVEITEM\":\n      const newDeletedData = state.products.filter(\n        (item) => item.PId !== action.payload\n      );\n      return { ...state, products: newDeletedData };\n\n    // case \"TOGGLE\":\n    //   let newVal;\n    //   let newToggle = state.products.map((item) => {\n    //     if (item.PId === data) {\n    //       newVal = item.UpdateToggle ? false : true;\n    //       return { ...item, UpdateToggle: newVal };\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n    //   console.log(\"newToggle\", newToggle);\n    //   return { ...state, products: newToggle };\n\n    case \"UPDATE\":\n      let id = action.payload.PId;\n      console.log(\"print id\", id);\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n\n      let update = state.products.map((item) => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price,\n          };\n        } else return item;\n      });\n      return { ...state, products: update };\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;EAC3B,QAAQF,MAAM,CAACG,IAAI;IACjB,KAAK,QAAQ;MACX,OAAO;QAAE,GAAGJ,KAAK;QAAEK,WAAW,EAAEH,IAAI;QAAEI,YAAY,EAAE;MAAG,CAAC;IAE1D,KAAK,cAAc;MACjB,IAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACM,YAAY,CAAC;MACvCN,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAAEC,IAAI,IAAK;QAC/B,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACZ,KAAK,CAACK,WAAW,CAAC,EAAE;UAC1CE,SAAS,GAAG,CAAC,GAAGA,SAAS,EAAEG,IAAI,CAAC;QAClC;MACF,CAAC,CAAC;MACF,OAAO;QAAE,GAAGV,KAAK;QAAEM,YAAY,EAAEC;MAAU,CAAC;IAE9C,KAAK,YAAY;MACf,MAAMM,cAAc,GAAGb,KAAK,CAACQ,QAAQ,CAACM,MAAM,CACzCJ,IAAI,IAAKA,IAAI,CAACK,GAAG,KAAKd,MAAM,CAACE,OAAO,CACtC;MACD,OAAO;QAAE,GAAGH,KAAK;QAAEQ,QAAQ,EAAEK;MAAe,CAAC;;IAE/C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,KAAK,QAAQ;MACX,IAAIG,EAAE,GAAGf,MAAM,CAACE,OAAO,CAACY,GAAG;MAC3BE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,EAAE,CAAC;MAC3B,IAAIG,OAAO,GAAGlB,MAAM,CAACE,OAAO,CAACQ,KAAK;MAClC,IAAIS,QAAQ,GAAGnB,MAAM,CAACE,OAAO,CAACkB,KAAK;MAEnC,IAAIC,MAAM,GAAGtB,KAAK,CAACQ,QAAQ,CAACe,GAAG,CAAEb,IAAI,IAAK;QACxC,IAAIA,IAAI,CAACK,GAAG,KAAKC,EAAE,EAAE;UACnB,OAAO;YACL,GAAGN,IAAI;YACPC,KAAK,EAAEQ,OAAO,GAAGA,OAAO,GAAGT,IAAI,CAACC,KAAK;YACrCU,KAAK,EAAED,QAAQ,GAAGA,QAAQ,GAAGV,IAAI,CAACW;UACpC,CAAC;QACH,CAAC,MAAM,OAAOX,IAAI;MACpB,CAAC,CAAC;MACF,OAAO;QAAE,GAAGV,KAAK;QAAEQ,QAAQ,EAAEc;MAAO,CAAC;IAEvC;MACE,OAAOtB,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}