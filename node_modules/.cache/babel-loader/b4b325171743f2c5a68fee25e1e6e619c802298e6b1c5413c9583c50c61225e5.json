{"ast":null,"code":"// import React, { createContext, useReducer, useContext, useEffect } from \"react\";\n// import reducer from \"../reducer/reducer\";\n\n// const initialState = {\n//   searchValue: \"\",\n//   searchedItem: [],\n// };\n// const DataContext = createContext();\n\n// const ContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   useEffect(() => {\n//     if (state.searchValue) dispatch({ type: \"UPDATESEARCH\" });\n//   }, [state.searchValue]);\n\n//   const handleSearchItem = (search) => {\n//     return dispatch({ type: \"SEARCH\", payload: search });\n//   };\n\n//   return (\n//     <DataContext.Provider\n//       value={{\n//         ...state,\n//         handleSearchItem,\n//       }}\n//     >\n//       {children}\n//     </DataContext.Provider>\n//   );\n// };\n// const useDataContext = () => {\n//   return useContext(DataContext);\n// };\n\n// export { ContextProvider, DataContext, useDataContext };","map":{"version":3,"names":[],"sources":["/home/sameer/Desktop/chakraRedux/src/context/ContextProvider.js"],"sourcesContent":["// import React, { createContext, useReducer, useContext, useEffect } from \"react\";\n// import reducer from \"../reducer/reducer\";\n\n// const initialState = {\n//   searchValue: \"\",\n//   searchedItem: [],\n// };\n// const DataContext = createContext();\n\n// const ContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   useEffect(() => {\n//     if (state.searchValue) dispatch({ type: \"UPDATESEARCH\" });\n//   }, [state.searchValue]);\n\n//   const handleSearchItem = (search) => {\n//     return dispatch({ type: \"SEARCH\", payload: search });\n//   };\n\n//   return (\n//     <DataContext.Provider\n//       value={{\n//         ...state,\n//         handleSearchItem,\n//       }}\n//     >\n//       {children}\n//     </DataContext.Provider>\n//   );\n// };\n// const useDataContext = () => {\n//   return useContext(DataContext);\n// };\n\n// export { ContextProvider, DataContext, useDataContext };\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}