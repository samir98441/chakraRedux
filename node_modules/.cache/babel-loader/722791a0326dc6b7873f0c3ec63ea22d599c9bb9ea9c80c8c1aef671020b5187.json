{"ast":null,"code":"const reducer = (state, action) => {\n  const data = action.payload;\n  switch (action.type) {\n    case \"SEARCH\":\n      return {\n        ...state,\n        searchValue: data,\n        searchedItem: []\n      };\n    case \"UPDATESEARCH\":\n      let addedItem = [...state.searchedItem];\n      state.products.forEach(item => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      return {\n        ...state,\n        searchedItem: addedItem\n      };\n    case \"REMOVEITEM\":\n      const newDeletedData = state.products.filter(item => item.PId !== action.payload);\n      return {\n        ...state,\n        products: newDeletedData\n      };\n\n    // case \"TOGGLE\":\n    //   let newVal;\n    //   let newToggle = state.products.map((item) => {\n    //     if (item.PId === data) {\n    //       newVal = item.UpdateToggle ? false : true;\n    //       return { ...item, UpdateToggle: newVal };\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n    //   console.log(\"newToggle\", newToggle);\n    //   return { ...state, products: newToggle };\n\n    case \"UPDATE\":\n      let id = action.payload.PId;\n      console.log(\"print id\", id);\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n      w;\n      let update = state.products.map(item => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price\n          };\n        } else return item;\n      });\n      return {\n        ...state,\n        products: update\n      };\n    case \"ADDTOCART\":\n      let newCart;\n      console.log(\"cartlength\", state.cart);\n      if (state.cart.length !== 0) {\n        const tempCart = state.cart.find(item => item.PId === action.payload);\n        if (!tempCart) {\n          let reqItem = state.products.find(item => item.PId === action.payload);\n          reqItem = {\n            ...reqItem,\n            quantity: 1\n          };\n          newCart = [...state.cart, reqItem];\n        } else {\n          let nCart = {\n            ...tempCart,\n            quantity: tempCart.quantity + 1\n          };\n          const newAddedQuantity = state.cart.filter(item => item.PId !== action.payload);\n          newCart = [...newAddedQuantity, nCart];\n        }\n      } else {\n        newCart = state.products.find(item => item.PId === action.payload);\n        newCart = [{\n          ...newCart,\n          quantity: 1\n        }];\n      }\n      return {\n        ...state,\n        cart: newCart\n      };\n    case \"REDUCECART\":\n      let updatedQuantity = state.cart.find(item => item.PId === action.payload);\n      if (updatedQuantity.quantity > 1) {\n        updatedQuantity = {\n          ...updatedQuantity,\n          quantity: updatedQuantity.quantity - 1\n        };\n        let oldCart = state.cart.filter(item => item.PId !== action.payload);\n        return {\n          ...state,\n          cart: [...oldCart, updatedQuantity]\n        };\n      } else {\n        let oldCart = state.cart.filter(item => item.PId !== action.payload);\n        return {\n          ...state,\n          cart: oldCart\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","data","payload","type","searchValue","searchedItem","addedItem","products","forEach","item","PName","includes","newDeletedData","filter","PId","id","console","log","newName","newPrice","Price","w","update","map","newCart","cart","length","tempCart","find","reqItem","quantity","nCart","newAddedQuantity","updatedQuantity","oldCart"],"sources":["/home/sameer/Desktop/chakraRedux/src/reducer/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\n  const data = action.payload;\n  switch (action.type) {\n    case \"SEARCH\":\n      return { ...state, searchValue: data, searchedItem: [] };\n\n    case \"UPDATESEARCH\":\n      let addedItem = [...state.searchedItem];\n      state.products.forEach((item) => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      return { ...state, searchedItem: addedItem };\n\n    case \"REMOVEITEM\":\n      const newDeletedData = state.products.filter(\n        (item) => item.PId !== action.payload\n      );\n      return { ...state, products: newDeletedData };\n\n    // case \"TOGGLE\":\n    //   let newVal;\n    //   let newToggle = state.products.map((item) => {\n    //     if (item.PId === data) {\n    //       newVal = item.UpdateToggle ? false : true;\n    //       return { ...item, UpdateToggle: newVal };\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n    //   console.log(\"newToggle\", newToggle);\n    //   return { ...state, products: newToggle };\n\n    case \"UPDATE\":\n      let id = action.payload.PId;\n      console.log(\"print id\", id);\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n      w;\n\n      let update = state.products.map((item) => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price,\n          };\n        } else return item;\n      });\n      return { ...state, products: update };\n\n    case \"ADDTOCART\":\n      let newCart;\n      console.log(\"cartlength\", state.cart);\n      if (state.cart.length !== 0) {\n        const tempCart = state.cart.find((item) => item.PId === action.payload);\n        if (!tempCart) {\n          let reqItem = state.products.find(\n            (item) => item.PId === action.payload\n          );\n          reqItem = { ...reqItem, quantity: 1 };\n          newCart = [...state.cart, reqItem];\n        } else {\n          let nCart = { ...tempCart, quantity: tempCart.quantity + 1 };\n          const newAddedQuantity = state.cart.filter(\n            (item) => item.PId !== action.payload\n          );\n          newCart = [...newAddedQuantity, nCart];\n        }\n      } else {\n        newCart = state.products.find((item) => item.PId === action.payload);\n        newCart = [{ ...newCart, quantity: 1 }];\n      }\n      return { ...state, cart: newCart };\n\n    case \"REDUCECART\":\n      let updatedQuantity = state.cart.find(\n        (item) => item.PId === action.payload\n      );\n      if (updatedQuantity.quantity > 1) {\n        updatedQuantity = {\n          ...updatedQuantity,\n          quantity: updatedQuantity.quantity - 1,\n        };\n        let oldCart = state.cart.filter((item) => item.PId !== action.payload);\n        return { ...state, cart: [...oldCart, updatedQuantity] };\n      } else {\n        let oldCart = state.cart.filter((item) => item.PId !== action.payload);\n        return { ...state, cart: oldCart };\n      }\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}