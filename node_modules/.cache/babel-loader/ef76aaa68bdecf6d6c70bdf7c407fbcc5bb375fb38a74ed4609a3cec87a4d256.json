{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  searchValue: \"\",\n  searchedItem: []\n};\nexport const updateSearchValue = createAction(\"updateSearchValue\");\nconst searchSlice = createSlice({\n  name: \"searchSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(updateSearchValue, (state, action) => {\n      state.searchValue = action.payload;\n    });\n    builder.addCase(updateSearchItem, (state, action) => {\n      let products = action.payload;\n      let addedItem = [{}];\n      products.forEach(item => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      state.searchedItem = addedItem;\n    });\n  }\n});\nconst SearchReducer = searchSlice.reducer;\nexport default SearchReducer;","map":{"version":3,"names":["createAction","createSlice","initialState","searchValue","searchedItem","updateSearchValue","searchSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","updateSearchItem","products","addedItem","forEach","item","PName","includes","SearchReducer","reducer"],"sources":["/home/sameer/Desktop/chakraRedux/src/store/slices/searchSlice.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  searchValue: \"\",\n  searchedItem: [],\n};\n\nexport const updateSearchValue = createAction(\"updateSearchValue\");\n\nconst searchSlice = createSlice({\n  name: \"searchSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(updateSearchValue, (state, action) => {\n      state.searchValue = action.payload;\n    });\n    builder.addCase(updateSearchItem, (state, action) => {\n      let products = action.payload;\n      let addedItem = [{}];\n      products.forEach((item) => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      state.searchedItem = addedItem;\n    });\n  },\n});\n\nconst SearchReducer = searchSlice.reducer;\nexport default SearchReducer;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGL,YAAY,CAAC,mBAAmB,CAAC;AAElE,MAAMM,WAAW,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACN,iBAAiB,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACT,WAAW,GAAGU,MAAM,CAACC,OAAO;IACpC,CAAC,CAAC;IACFJ,OAAO,CAACC,OAAO,CAACI,gBAAgB,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACnD,IAAIG,QAAQ,GAAGH,MAAM,CAACC,OAAO;MAC7B,IAAIG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;MACpBD,QAAQ,CAACE,OAAO,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACT,KAAK,CAACT,WAAW,CAAC,EAAE;UAC1Cc,SAAS,GAAG,CAAC,GAAGA,SAAS,EAAEE,IAAI,CAAC;QAClC;MACF,CAAC,CAAC;MACFP,KAAK,CAACR,YAAY,GAAGa,SAAS;IAChC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAMK,aAAa,GAAGhB,WAAW,CAACiB,OAAO;AACzC,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}