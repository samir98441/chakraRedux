{"ast":null,"code":"// import React, { createContext, useReducer, useContext, useEffect } from \"react\";\n// import reducer from \"../reducer/reducer\";\n// // const defaultValue = {\n// //   PID: \"\",\n// //   PName: \"\",\n// //   PImageUrl: \"\",\n// //   UpdateToggle: false,\n// //   quantity: 0,\n// // };\n// const initialState = {\n//   products: [],\n//   searchValue: \"\",\n//   searchedItem: [],\n//   cart: [],\n// };\n// const DataContext = createContext();\n\n// const ContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   useEffect(() => {\n//     const items = JSON.parse(localStorage.getItem(\"products\") || []);\n//     const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n//     console.log(\"First load\", items);\n//     if (items) {\n//       dispatch({ type: \"LOADPRODUCTS\", payload: items });\n//     }\n//     if (cartItems) {\n//       dispatch({ type: \"LOADCARTS\", payload: cartItems });\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     console.log(\"Set products local storage\", state.products);\n//     if (state.products.length) {\n//       localStorage.setItem(\"products\", JSON.stringify(state.products));\n//     }\n//   }, [state.products]);\n\n//   useEffect(() => {\n//     if (state.products.length)\n//       localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n//   }, [state.cart]);\n\n//   useEffect(() => {\n//     if (state.searchValue) dispatch({ type: \"UPDATESEARCH\" });\n//   }, [state.searchValue]);\n\n//   const handelAddItem = (data) => {\n//     return dispatch({ type: \"ADDITEM\", payload: data });\n//   };\n\n//   const handleSearchItem = (search) => {\n//     return dispatch({ type: \"SEARCH\", payload: search });\n//   };\n\n//   const handleRemove = (PId) => {\n//     return dispatch({ type: \"REMOVEITEM\", payload: PId });\n//   };\n\n//   const handleToggle = (PId) => {\n//     return dispatch({ type: \"TOGGLE\", payload: PId });\n//   };\n\n//   const handleUpdate = (data) => {\n//     return dispatch({ type: \"UPDATE\", payload: data });\n//   };\n\n//   const handleAddCart = (PId) => {\n//     return dispatch({ type: \"ADDTOCART\", payload: PId });\n//   };\n\n//   const handleReduceCart = (PId) => {\n//     return dispatch({ type: \"REDUCECART\", payload: PId });\n//   };\n\n//   return (\n//     <DataContext.Provider\n//       value={{\n//         ...state,\n//         handelAddItem,\n//         handleSearchItem,\n//         handleRemove,\n//         handleToggle,\n//         handleUpdate,\n//         handleAddCart,\n//         handleReduceCart,\n//       }}\n//     >\n//       {children}\n//     </DataContext.Provider>\n//   );\n// };\n// const useDataContext = () => {\n//   return useContext(DataContext);\n// };\n\n// export { ContextProvider, DataContext, useDataContext };","map":{"version":3,"names":[],"sources":["/home/sameer/Desktop/chakraRedux/src/context/ContextProvider.js"],"sourcesContent":["// import React, { createContext, useReducer, useContext, useEffect } from \"react\";\n// import reducer from \"../reducer/reducer\";\n// // const defaultValue = {\n// //   PID: \"\",\n// //   PName: \"\",\n// //   PImageUrl: \"\",\n// //   UpdateToggle: false,\n// //   quantity: 0,\n// // };\n// const initialState = {\n//   products: [],\n//   searchValue: \"\",\n//   searchedItem: [],\n//   cart: [],\n// };\n// const DataContext = createContext();\n\n// const ContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   useEffect(() => {\n//     const items = JSON.parse(localStorage.getItem(\"products\") || []);\n//     const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n//     console.log(\"First load\", items);\n//     if (items) {\n//       dispatch({ type: \"LOADPRODUCTS\", payload: items });\n//     }\n//     if (cartItems) {\n//       dispatch({ type: \"LOADCARTS\", payload: cartItems });\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     console.log(\"Set products local storage\", state.products);\n//     if (state.products.length) {\n//       localStorage.setItem(\"products\", JSON.stringify(state.products));\n//     }\n//   }, [state.products]);\n\n//   useEffect(() => {\n//     if (state.products.length)\n//       localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n//   }, [state.cart]);\n\n//   useEffect(() => {\n//     if (state.searchValue) dispatch({ type: \"UPDATESEARCH\" });\n//   }, [state.searchValue]);\n\n//   const handelAddItem = (data) => {\n//     return dispatch({ type: \"ADDITEM\", payload: data });\n//   };\n\n//   const handleSearchItem = (search) => {\n//     return dispatch({ type: \"SEARCH\", payload: search });\n//   };\n\n//   const handleRemove = (PId) => {\n//     return dispatch({ type: \"REMOVEITEM\", payload: PId });\n//   };\n\n//   const handleToggle = (PId) => {\n//     return dispatch({ type: \"TOGGLE\", payload: PId });\n//   };\n\n//   const handleUpdate = (data) => {\n//     return dispatch({ type: \"UPDATE\", payload: data });\n//   };\n\n//   const handleAddCart = (PId) => {\n//     return dispatch({ type: \"ADDTOCART\", payload: PId });\n//   };\n\n//   const handleReduceCart = (PId) => {\n//     return dispatch({ type: \"REDUCECART\", payload: PId });\n//   };\n\n//   return (\n//     <DataContext.Provider\n//       value={{\n//         ...state,\n//         handelAddItem,\n//         handleSearchItem,\n//         handleRemove,\n//         handleToggle,\n//         handleUpdate,\n//         handleAddCart,\n//         handleReduceCart,\n//       }}\n//     >\n//       {children}\n//     </DataContext.Provider>\n//   );\n// };\n// const useDataContext = () => {\n//   return useContext(DataContext);\n// };\n\n// export { ContextProvider, DataContext, useDataContext };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}