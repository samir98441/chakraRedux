{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\nconst initialState = {\n  cart: []\n};\nexport const loadCart = createAction(\"loadCart\");\nexport const addToCart = createAction(\"addToCart\");\nexport const deleteFromCart = createAction(\"deleteFromCart\");\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadCart, (state, action) => {\n      state.cart = cartItems;\n    });\n    builder.addCase(addToCart, (state, action) => {\n      console.log(\"carttt\", state.cart);\n      if (state.cart.length !== 0) {\n        const tempCart = state.cart.find(item => item.PId === action.payload.PId);\n        if (!tempCart) {\n          let newCartItem = {\n            ...action.payload,\n            quantity: 1\n          };\n          state.cart = [...state.cart, newCartItem];\n        } else {\n          let updatedItemInCart = {\n            ...tempCart,\n            quantity: tempCart.quantity + 1\n          };\n          const oldCart = state.cart.filter(item => item.PId !== action.payload.PId);\n          state.cart = [...oldCart, updatedItemInCart];\n        }\n      } else {\n        console.log(\"before\", state.cart);\n        state.cart = {\n          ...action.payload,\n          quantity: 1\n        };\n        console.log(\"after\", state.cart);\n      }\n    });\n    builder.addCase(deleteFromCart, (state, action) => {\n      let updatedQuantity = state.cart.find(item => item.PId === action.payload);\n      if (updatedQuantity.quantity > 1) {\n        updatedQuantity = {\n          ...updatedQuantity,\n          quantity: updatedQuantity.quantity - 1\n        };\n        let oldCart = state.cart.filter(item => item.PId !== action.payload);\n        state.cart = [...oldCart, updatedQuantity];\n      } else {\n        let oldCart = state.cart.filter(item => item.PId !== action.payload);\n        return {\n          ...state,\n          cart: oldCart\n        };\n      }\n    });\n  }\n});\nconst CartReducer = cartSlice.reducer;\nexport default CartReducer;","map":{"version":3,"names":["createAction","createSlice","cartItems","JSON","parse","localStorage","getItem","initialState","cart","loadCart","addToCart","deleteFromCart","cartSlice","name","reducers","extraReducers","builder","addCase","state","action","console","log","length","tempCart","find","item","PId","payload","newCartItem","quantity","updatedItemInCart","oldCart","filter","updatedQuantity","CartReducer","reducer"],"sources":["/home/sameer/Desktop/chakraRedux/src/store/slices/cartSlice.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\n\nconst cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\nconst initialState = {\n  cart: [],\n};\nexport const loadCart = createAction(\"loadCart\");\nexport const addToCart = createAction(\"addToCart\");\nexport const deleteFromCart = createAction(\"deleteFromCart\");\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(loadCart, (state, action) => {\n      state.cart = cartItems;\n    });\n    builder.addCase(addToCart, (state, action) => {\n      console.log(\"carttt\", state.cart);\n      if (state.cart.length !== 0) {\n        const tempCart = state.cart.find(\n          (item) => item.PId === action.payload.PId\n        );\n        if (!tempCart) {\n          let newCartItem = { ...action.payload, quantity: 1 };\n          state.cart = [...state.cart, newCartItem];\n        } else {\n          let updatedItemInCart = {\n            ...tempCart,\n            quantity: tempCart.quantity + 1,\n          };\n          const oldCart = state.cart.filter(\n            (item) => item.PId !== action.payload.PId\n          );\n          state.cart = [...oldCart, updatedItemInCart];\n        }\n      } else {\n        console.log(\"before\", state.cart);\n        state.cart = { ...action.payload, quantity: 1 };\n        console.log(\"after\", state.cart);\n      }\n    });\n    builder.addCase(deleteFromCart, (state, action) => {\n      let updatedQuantity = state.cart.find(\n        (item) => item.PId === action.payload\n      );\n      if (updatedQuantity.quantity > 1) {\n        updatedQuantity = {\n          ...updatedQuantity,\n          quantity: updatedQuantity.quantity - 1,\n        };\n        let oldCart = state.cart.filter((item) => item.PId !== action.payload);\n        state.cart = [...oldCart, updatedQuantity];\n      } else {\n        let oldCart = state.cart.filter((item) => item.PId !== action.payload);\n        return { ...state, cart: oldCart };\n      }\n    });\n  },\n});\n\nconst CartReducer = cartSlice.reducer;\nexport default CartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}