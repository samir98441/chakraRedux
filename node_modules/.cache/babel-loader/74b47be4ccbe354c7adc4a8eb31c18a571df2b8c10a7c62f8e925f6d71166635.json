{"ast":null,"code":"import { createAction, createReducer, createSlice } from \"@reduxjs/toolkit\";\nconst items = JSON.parse(localStorage.getItem(\"products\") || []);\nconst cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\nconst initialState = {\n  cart: []\n};\nexport const loadCart = createAction(\"loadCart\");\nexport const addToCart = createAction(\"addToCart\");\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadCart, (state, action) => {\n      state.cart = cartItems;\n    });\n    builder.addCase(addToCart, (state, action) => {\n      //   state.cart = action.payload;\n      console.log(\"inside cart\", action.payload);\n      let newCart;\n      console.log(\"cartlength\", state.cart);\n      if (state.cart.length !== 0) {\n        const tempCart = state.cart.find(item => item.PId === action.payload);\n        if (!tempCart) {\n          let reqItem = state.products.find(item => item.PId === action.payload);\n          reqItem = {\n            ...reqItem,\n            quantity: 1\n          };\n          newCart = [...state.cart, reqItem];\n        } else {\n          let nCart = {\n            ...tempCart,\n            quantity: tempCart.quantity + 1\n          };\n          const newAddedQuantity = state.cart.filter(item => item.PId !== action.payload);\n          newCart = [...newAddedQuantity, nCart];\n        }\n      } else {\n        newCart = state.products.find(item => item.PId === action.payload);\n        newCart = [{\n          ...newCart,\n          quantity: 1\n        }];\n      }\n      return {\n        ...state,\n        cart: newCart\n      };\n    });\n  }\n});\nconst CartReducer = cartSlice.reducer;\nexport default CartReducer;","map":{"version":3,"names":["createAction","createReducer","createSlice","items","JSON","parse","localStorage","getItem","cartItems","initialState","cart","loadCart","addToCart","cartSlice","name","reducers","extraReducers","builder","addCase","state","action","console","log","payload","newCart","length","tempCart","find","item","PId","reqItem","products","quantity","nCart","newAddedQuantity","filter","CartReducer","reducer"],"sources":["/home/sameer/Desktop/chakraRedux/src/store/slices/cartSlice.js"],"sourcesContent":["import { createAction, createReducer, createSlice } from \"@reduxjs/toolkit\";\nconst items = JSON.parse(localStorage.getItem(\"products\") || []);\nconst cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\nconst initialState = {\n  cart: [],\n};\nexport const loadCart = createAction(\"loadCart\");\nexport const addToCart = createAction(\"addToCart\");\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(loadCart, (state, action) => {\n      state.cart = cartItems;\n    });\n    builder.addCase(addToCart, (state, action) => {\n      //   state.cart = action.payload;\n      console.log(\"inside cart\", action.payload);\n\n      let newCart;\n      console.log(\"cartlength\", state.cart);\n      if (state.cart.length !== 0) {\n        const tempCart = state.cart.find((item) => item.PId === action.payload);\n        if (!tempCart) {\n          let reqItem = state.products.find(\n            (item) => item.PId === action.payload\n          );\n          reqItem = { ...reqItem, quantity: 1 };\n          newCart = [...state.cart, reqItem];\n        } else {\n          let nCart = { ...tempCart, quantity: tempCart.quantity + 1 };\n          const newAddedQuantity = state.cart.filter(\n            (item) => item.PId !== action.payload\n          );\n          newCart = [...newAddedQuantity, nCart];\n        }\n      } else {\n        newCart = state.products.find((item) => item.PId === action.payload);\n        newCart = [{ ...newCart, quantity: 1 }];\n      }\n      return { ...state, cart: newCart };\n    });\n  },\n});\n\nconst CartReducer = cartSlice.reducer;\nexport default CartReducer;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,WAAW,QAAQ,kBAAkB;AAC3E,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAChE,MAAMC,SAAS,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;AAEhE,MAAME,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AACD,OAAO,MAAMC,QAAQ,GAAGX,YAAY,CAAC,UAAU,CAAC;AAChD,OAAO,MAAMY,SAAS,GAAGZ,YAAY,CAAC,WAAW,CAAC;AAElD,MAAMa,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACP,QAAQ,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACT,IAAI,GAAGF,SAAS;IACxB,CAAC,CAAC;IACFS,OAAO,CAACC,OAAO,CAACN,SAAS,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MAC5C;MACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,MAAM,CAACG,OAAO,CAAC;MAE1C,IAAIC,OAAO;MACXH,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,CAACT,IAAI,CAAC;MACrC,IAAIS,KAAK,CAACT,IAAI,CAACe,MAAM,KAAK,CAAC,EAAE;QAC3B,MAAMC,QAAQ,GAAGP,KAAK,CAACT,IAAI,CAACiB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CAAC;QACvE,IAAI,CAACG,QAAQ,EAAE;UACb,IAAII,OAAO,GAAGX,KAAK,CAACY,QAAQ,CAACJ,IAAI,CAC9BC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CACtC;UACDO,OAAO,GAAG;YAAE,GAAGA,OAAO;YAAEE,QAAQ,EAAE;UAAE,CAAC;UACrCR,OAAO,GAAG,CAAC,GAAGL,KAAK,CAACT,IAAI,EAAEoB,OAAO,CAAC;QACpC,CAAC,MAAM;UACL,IAAIG,KAAK,GAAG;YAAE,GAAGP,QAAQ;YAAEM,QAAQ,EAAEN,QAAQ,CAACM,QAAQ,GAAG;UAAE,CAAC;UAC5D,MAAME,gBAAgB,GAAGf,KAAK,CAACT,IAAI,CAACyB,MAAM,CACvCP,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CACtC;UACDC,OAAO,GAAG,CAAC,GAAGU,gBAAgB,EAAED,KAAK,CAAC;QACxC;MACF,CAAC,MAAM;QACLT,OAAO,GAAGL,KAAK,CAACY,QAAQ,CAACJ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CAAC;QACpEC,OAAO,GAAG,CAAC;UAAE,GAAGA,OAAO;UAAEQ,QAAQ,EAAE;QAAE,CAAC,CAAC;MACzC;MACA,OAAO;QAAE,GAAGb,KAAK;QAAET,IAAI,EAAEc;MAAQ,CAAC;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAMY,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AACrC,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}