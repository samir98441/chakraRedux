{"ast":null,"code":"const reducer = (state, action) => {\n  const data = action.payload;\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      return {\n        ...state,\n        products: data\n      };\n    case \"ADDITEM\":\n      const addedState = state.products;\n      const newData = [...addedState, data];\n      state = {\n        ...state,\n        products: newData\n      };\n      return state;\n    case \"SEARCH\":\n      return {\n        ...state,\n        searchValue: data,\n        searchedItem: []\n      };\n    case \"UPDATESEARCH\":\n      let addedItem = [...state.searchedItem];\n      state.products.forEach(item => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      return {\n        ...state,\n        searchedItem: addedItem\n      };\n    case \"REMOVEITEM\":\n      const newDeletedData = state.products.filter(item => item.PId !== action.payload);\n      return {\n        ...state,\n        products: newDeletedData\n      };\n    case \"TOGGLE\":\n      let newVal;\n      let newToggle = state.products.map(item => {\n        if (item.PId === data) {\n          newVal = item.UpdateToggle ? false : true;\n          return {\n            ...item,\n            UpdateToggle: newVal\n          };\n        } else {\n          return item;\n        }\n      });\n      console.log(\"newToggle\", newToggle);\n      return {\n        ...state,\n        products: newToggle\n      };\n    case \"UPDATE\":\n      let id = action.payload.PId;\n      console.log(\"print id\", id);\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n      let update = state.products.map(item => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price\n          };\n        } else return item;\n      });\n      return {\n        ...state,\n        products: update\n      };\n    case \"ADDTOCART\":\n      let newCart;\n      console.log(\"cartlength\", state.cart);\n      if (state.cart.length !== 0) {\n        // newCart = state.cart.map((item) => {\n        //   if (item.PId === action.payload) {\n        //     newQuantity = item.quantity + 1;\n        //     console.log(\"increasedQuantity\", newQuantity);\n        //     return { ...item, quantity: newQuantity };\n        //   } else {\n        //     newQuantity = 1;\n        //     console.log(\"qqq\");\n        //     let ss = state.products.find((item) => item.PId === action.payload);\n        //     return { ...ss, quantity: newQuantity };\n        //   }\n        // });\n        const tempCart = state.cart.find(item => item.PId === action.payload);\n        if (!tempCart) {\n          let reqItem = state.products.find(item => item.PId === action.payload);\n          reqItem = {\n            ...reqItem,\n            quantity: 1\n          };\n          newCart = [...state.cart, reqItem];\n        } else {\n          let nCart = {\n            ...tempCart,\n            quantity: tempCart.quantity + 1\n          };\n          const newAddedQuantity = state.cart.filter(item => item.PId !== action.payload);\n          newCart = [...newAddedQuantity, nCart];\n        }\n      } else {\n        newCart = state.products.find(item => item.PId === action.payload);\n        newCart = [{\n          ...newCart,\n          quantity: 1\n        }];\n      }\n      return {\n        ...state,\n        cart: newCart\n      };\n    case \"REDUCECART\":\n      let updatedQuantity = state.cart.find(item => item.PId === action.payload);\n      updatedQuantity = {\n        ...updatedQuantity,\n        quantity: updatedQuantity.quantity - 1\n      };\n      let oldCart = state.cart.filter(item => item.PId !== action.payload);\n      return {\n        ...state,\n        cart: [...oldCart, updatedQuantity]\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","data","payload","type","products","addedState","newData","searchValue","searchedItem","addedItem","forEach","item","PName","includes","newDeletedData","filter","PId","newVal","newToggle","map","UpdateToggle","console","log","id","newName","newPrice","Price","update","newCart","cart","length","tempCart","find","reqItem","quantity","nCart","newAddedQuantity","updatedQuantity","oldCart"],"sources":["/home/sameer/Desktop/chakra2/chakra/src/reducer/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\n  const data = action.payload;\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      return { ...state, products: data };\n    case \"ADDITEM\":\n      const addedState = state.products;\n      const newData = [...addedState, data];\n      state = { ...state, products: newData };\n      return state;\n\n    case \"SEARCH\":\n      return { ...state, searchValue: data, searchedItem: [] };\n\n    case \"UPDATESEARCH\":\n      let addedItem = [...state.searchedItem];\n      state.products.forEach((item) => {\n        if (item.PName.includes(state.searchValue)) {\n          addedItem = [...addedItem, item];\n        }\n      });\n      return { ...state, searchedItem: addedItem };\n\n    case \"REMOVEITEM\":\n      const newDeletedData = state.products.filter(\n        (item) => item.PId !== action.payload\n      );\n      return { ...state, products: newDeletedData };\n\n    case \"TOGGLE\":\n      let newVal;\n      let newToggle = state.products.map((item) => {\n        if (item.PId === data) {\n          newVal = item.UpdateToggle ? false : true;\n          return { ...item, UpdateToggle: newVal };\n        } else {\n          return item;\n        }\n      });\n      console.log(\"newToggle\", newToggle);\n      return { ...state, products: newToggle };\n\n    case \"UPDATE\":\n      let id = action.payload.PId;\n      console.log(\"print id\", id);\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n\n      let update = state.products.map((item) => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price,\n          };\n        } else return item;\n      });\n      return { ...state, products: update };\n\n    case \"ADDTOCART\":\n      let newCart;\n      console.log(\"cartlength\", state.cart);\n      if (state.cart.length !== 0) {\n        // newCart = state.cart.map((item) => {\n        //   if (item.PId === action.payload) {\n        //     newQuantity = item.quantity + 1;\n        //     console.log(\"increasedQuantity\", newQuantity);\n        //     return { ...item, quantity: newQuantity };\n        //   } else {\n        //     newQuantity = 1;\n        //     console.log(\"qqq\");\n        //     let ss = state.products.find((item) => item.PId === action.payload);\n        //     return { ...ss, quantity: newQuantity };\n        //   }\n        // });\n        const tempCart = state.cart.find((item) => item.PId === action.payload);\n        if (!tempCart) {\n          let reqItem = state.products.find(\n            (item) => item.PId === action.payload\n          );\n          reqItem = { ...reqItem, quantity: 1 };\n          newCart = [...state.cart, reqItem];\n        } else {\n          let nCart = { ...tempCart, quantity: tempCart.quantity + 1 };\n          const newAddedQuantity = state.cart.filter(\n            (item) => item.PId !== action.payload\n          );\n          newCart = [...newAddedQuantity, nCart];\n        }\n      } else {\n        newCart = state.products.find((item) => item.PId === action.payload);\n        newCart = [{ ...newCart, quantity: 1 }];\n      }\n      return { ...state, cart: newCart };\n\n    case \"REDUCECART\":\n      let updatedQuantity = state.cart.find(\n        (item) => item.PId === action.payload\n      );\n      updatedQuantity = {\n        ...updatedQuantity,\n        quantity: updatedQuantity.quantity - 1,\n      };\n      let oldCart = state.cart.filter((item) => item.PId !== action.payload);\n      return { ...state, cart: [...oldCart, updatedQuantity] };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}