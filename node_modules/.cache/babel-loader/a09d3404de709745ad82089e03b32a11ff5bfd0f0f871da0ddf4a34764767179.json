{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [{}],\n  formToggle: [{}]\n};\nexport const loadProducts = createAction(\"loadProducts\");\nexport const addProducts = createAction(\"addProducts\");\nexport const updateProducts = createAction(\"updateProducts\");\nexport const updateFormToggle = createAction(\"updateFormToggle\");\nexport const removeItem = createAction(\"removeItem\");\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadProducts, (state, action) => {\n      var _JSON$parse;\n      state.products = (_JSON$parse = JSON.parse(localStorage.getItem(\"products\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n      console.log(\"k vara idyp\", state.products);\n    });\n    builder.addCase(addProducts, (state, action) => {\n      const addedState = state.products;\n      const tempVale = action.payload;\n      console.log(\"inside addproducts\", tempVale);\n      const tempProduct = [tempVale, ...addedState];\n      state.products = [...tempProduct];\n    });\n    builder.addCase(updateProducts, (state, action) => {\n      console.log(\"updated prod\");\n      let id = action.payload.PId;\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n      let updatedProducts = state.products.map(item => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price\n          };\n        } else return item;\n      });\n      console.log(\"updated productsss\", updatedProducts);\n      state.products = updatedProducts;\n      console.log(\"updated products\", updatedProducts);\n    });\n    builder.addCase(updateFormToggle, (state, action) => {\n      if (!state.formToggle) {\n        let toggleItem = state.formToggle.find(item => item.id === action.payload);\n        const oldToggleItem = state.formToggle.filter(item => item.id !== action.payload);\n        console.log(\"toggle\", toggleItem);\n        toggleItem.value = !toggleItem.value;\n        state.formToggle = [...oldToggleItem, toggleItem];\n      }\n    });\n    builder.addCase(removeItem, (state, action) => {\n      const newDeletedData = state.products.filter(item => item.PId !== action.payload);\n      state.products = newDeletedData;\n    });\n  }\n});\nconst ProductsReducer = productsSlice.reducer;\nexport default ProductsReducer;","map":{"version":3,"names":["createAction","createSlice","initialState","products","formToggle","loadProducts","addProducts","updateProducts","updateFormToggle","removeItem","productsSlice","name","reducers","extraReducers","builder","addCase","state","action","JSON","parse","localStorage","getItem","console","log","addedState","tempVale","payload","tempProduct","id","PId","newName","PName","newPrice","Price","updatedProducts","map","item","toggleItem","find","oldToggleItem","filter","value","newDeletedData","ProductsReducer","reducer"],"sources":["/home/sameer/Desktop/chakraRedux/src/store/slices/productsSlice.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  products: [{}],\n  formToggle: [{}],\n};\n\nexport const loadProducts = createAction(\"loadProducts\");\nexport const addProducts = createAction(\"addProducts\");\nexport const updateProducts = createAction(\"updateProducts\");\nexport const updateFormToggle = createAction(\"updateFormToggle\");\nexport const removeItem = createAction(\"removeItem\");\n\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(loadProducts, (state, action) => {\n      state.products = JSON.parse(localStorage.getItem(\"products\")) ?? [];\n      console.log(\"k vara idyp\", state.products);\n    });\n    builder.addCase(addProducts, (state, action) => {\n      const addedState = state.products;\n\n      const tempVale = action.payload;\n      console.log(\"inside addproducts\", tempVale);\n      const tempProduct = [tempVale, ...addedState];\n      state.products = [...tempProduct];\n    });\n    builder.addCase(updateProducts, (state, action) => {\n      console.log(\"updated prod\");\n      let id = action.payload.PId;\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n\n      let updatedProducts = state.products.map((item) => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price,\n          };\n        } else return item;\n      });\n      console.log(\"updated productsss\", updatedProducts);\n      state.products = updatedProducts;\n      console.log(\"updated products\", updatedProducts);\n    });\n    builder.addCase(updateFormToggle, (state, action) => {\n      if (!state.formToggle) {\n        let toggleItem = state.formToggle.find(\n          (item) => item.id === action.payload\n        );\n        const oldToggleItem = state.formToggle.filter(\n          (item) => item.id !== action.payload\n        );\n        console.log(\"toggle\", toggleItem);\n        toggleItem.value = !toggleItem.value;\n        state.formToggle = [...oldToggleItem, toggleItem];\n      }\n    });\n    builder.addCase(removeItem, (state, action) => {\n      const newDeletedData = state.products.filter(\n        (item) => item.PId !== action.payload\n      );\n      state.products = newDeletedData;\n    });\n  },\n});\n\nconst ProductsReducer = productsSlice.reducer;\nexport default ProductsReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}