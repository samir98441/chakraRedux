{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst products = JSON.parse(localStorage.getItem(\"products\") || []);\nconst initialState = {\n  products: products,\n  isFormOpen: false\n};\nexport const loadProducts = createAction(\"loadProducts\");\nexport const addProducts = createAction(\"addProducts\");\nexport const updateProducts = createAction(\"updateProducts\");\nexport const updateFormToggle = createAction(\"updateFormToggle\");\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadProducts, (state, action) => {\n      state.products = products;\n    });\n    builder.addCase(addProducts, (state, action) => {\n      const addedState = state.products;\n      state.products = [...addedState, action.payload];\n    });\n    builder.addCase(updateProducts, (state, action) => {\n      let id = action.payload.PId;\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n      let updatedProducts = state.products.map(item => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price\n          };\n        } else return item;\n      });\n      state.products = updatedProducts;\n    });\n    builder.addCase(updateFormToggle, (state, action) => {\n      state.products = products;\n    });\n  }\n});\nconst ProductsReducer = productsSlice.reducer;\nexport default ProductsReducer;","map":{"version":3,"names":["createAction","createSlice","products","JSON","parse","localStorage","getItem","initialState","isFormOpen","loadProducts","addProducts","updateProducts","updateFormToggle","productsSlice","name","reducers","extraReducers","builder","addCase","state","action","addedState","payload","id","PId","newName","PName","newPrice","Price","updatedProducts","map","item","ProductsReducer","reducer"],"sources":["/home/sameer/Desktop/chakraRedux/src/store/slices/productsSlice.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst products = JSON.parse(localStorage.getItem(\"products\") || []);\n\nconst initialState = {\n  products: products,\n  isFormOpen: false,\n};\n\nexport const loadProducts = createAction(\"loadProducts\");\nexport const addProducts = createAction(\"addProducts\");\nexport const updateProducts = createAction(\"updateProducts\");\nexport const updateFormToggle = createAction(\"updateFormToggle\");\n\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(loadProducts, (state, action) => {\n      state.products = products;\n    });\n    builder.addCase(addProducts, (state, action) => {\n      const addedState = state.products;\n      state.products = [...addedState, action.payload];\n    });\n    builder.addCase(updateProducts, (state, action) => {\n      let id = action.payload.PId;\n      let newName = action.payload.PName;\n      let newPrice = action.payload.Price;\n\n      let updatedProducts = state.products.map((item) => {\n        if (item.PId === id) {\n          return {\n            ...item,\n            PName: newName ? newName : item.PName,\n            Price: newPrice ? newPrice : item.Price,\n          };\n        } else return item;\n      });\n      state.products = updatedProducts;\n    });\n    builder.addCase(updateFormToggle, (state, action) => {\n      state.products = products;\n    });\n  },\n});\n\nconst ProductsReducer = productsSlice.reducer;\nexport default ProductsReducer;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAC5D,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAEnE,MAAMC,YAAY,GAAG;EACnBL,QAAQ,EAAEA,QAAQ;EAClBM,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,YAAY,CAAC,cAAc,CAAC;AACxD,OAAO,MAAMU,WAAW,GAAGV,YAAY,CAAC,aAAa,CAAC;AACtD,OAAO,MAAMW,cAAc,GAAGX,YAAY,CAAC,gBAAgB,CAAC;AAC5D,OAAO,MAAMY,gBAAgB,GAAGZ,YAAY,CAAC,kBAAkB,CAAC;AAEhE,OAAO,MAAMa,aAAa,GAAGZ,WAAW,CAAC;EACvCa,IAAI,EAAE,UAAU;EAChBP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACT,YAAY,EAAE,CAACU,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACjB,QAAQ,GAAGA,QAAQ;IAC3B,CAAC,CAAC;IACFe,OAAO,CAACC,OAAO,CAACR,WAAW,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAK;MAC9C,MAAMC,UAAU,GAAGF,KAAK,CAACjB,QAAQ;MACjCiB,KAAK,CAACjB,QAAQ,GAAG,CAAC,GAAGmB,UAAU,EAAED,MAAM,CAACE,OAAO,CAAC;IAClD,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACP,cAAc,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;MACjD,IAAIG,EAAE,GAAGH,MAAM,CAACE,OAAO,CAACE,GAAG;MAC3B,IAAIC,OAAO,GAAGL,MAAM,CAACE,OAAO,CAACI,KAAK;MAClC,IAAIC,QAAQ,GAAGP,MAAM,CAACE,OAAO,CAACM,KAAK;MAEnC,IAAIC,eAAe,GAAGV,KAAK,CAACjB,QAAQ,CAAC4B,GAAG,CAAEC,IAAI,IAAK;QACjD,IAAIA,IAAI,CAACP,GAAG,KAAKD,EAAE,EAAE;UACnB,OAAO;YACL,GAAGQ,IAAI;YACPL,KAAK,EAAED,OAAO,GAAGA,OAAO,GAAGM,IAAI,CAACL,KAAK;YACrCE,KAAK,EAAED,QAAQ,GAAGA,QAAQ,GAAGI,IAAI,CAACH;UACpC,CAAC;QACH,CAAC,MAAM,OAAOG,IAAI;MACpB,CAAC,CAAC;MACFZ,KAAK,CAACjB,QAAQ,GAAG2B,eAAe;IAClC,CAAC,CAAC;IACFZ,OAAO,CAACC,OAAO,CAACN,gBAAgB,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACjB,QAAQ,GAAGA,QAAQ;IAC3B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAM8B,eAAe,GAAGnB,aAAa,CAACoB,OAAO;AAC7C,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}