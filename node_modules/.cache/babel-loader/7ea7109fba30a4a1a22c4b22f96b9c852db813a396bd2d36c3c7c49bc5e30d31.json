{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  searchValue: \"\",\n  searchedItem: []\n};\nexport const updateSearchedValue = createAction(\"updateSearchedValue\");\nconst searchSlice = createSlice({\n  name: \"searchSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(updateSearchedValue, (state, action) => {\n      state.cart = cartItems;\n    });\n  }\n});\nconst SearchReducer = searchSlice.reducer;\nexport default SearchReducer;","map":{"version":3,"names":["createAction","createSlice","initialState","searchValue","searchedItem","updateSearchedValue","searchSlice","name","reducers","extraReducers","builder","addCase","state","action","cart","cartItems","SearchReducer","reducer"],"sources":["/home/sameer/Desktop/chakraRedux/src/store/slices/searchSlice.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  searchValue: \"\",\n  searchedItem: [],\n};\n\nexport const updateSearchedValue = createAction(\"updateSearchedValue\");\n\nconst searchSlice = createSlice({\n  name: \"searchSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(updateSearchedValue, (state, action) => {\n      state.cart = cartItems;\n    });\n  },\n});\n\nconst SearchReducer = searchSlice.reducer;\nexport default SearchReducer;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGL,YAAY,CAAC,qBAAqB,CAAC;AAEtE,MAAMM,WAAW,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACN,mBAAmB,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACE,IAAI,GAAGC,SAAS;IACxB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGV,WAAW,CAACW,OAAO;AACzC,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}