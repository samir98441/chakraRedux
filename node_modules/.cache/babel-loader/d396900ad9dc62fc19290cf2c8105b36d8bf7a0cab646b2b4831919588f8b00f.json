{"ast":null,"code":"// import React, { createContext, useContext, useEffect, useReducer } from \"react\";\n// import reducer from \"../reducer/loginReducer\";\n\n// const initialState = {\n//   // defaultUsers: [\n//   //   { email: \"sameer\", password: \"sa123\" },\n//   //   { email: \"suman\", password: \"su123\" },\n//   //   { email: \"hari\", password: \"ha123\" },\n//   // ],\n//   isLoggedIn: false,\n// };\n\n// const LoginContext = createContext();\n\n// const LoginContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   const handleLogout = () => {\n//     return dispatch({ type: \"LOGOUT\" });\n//   };\n//   useEffect(() => {\n//     console.log(\"loginCheck\", state.isLoggedIn);\n//   }, [state.isLoggedIn]);\n\n//   const handelLoginValidation = (values) => {\n//     return dispatch({ type: \"LOGINVALIDATE\", payload: values });\n//   };\n//   return (\n//     <LoginContext.Provider\n//       value={{ ...state, handelLoginValidation, handleLogout }}\n//     >\n//       {children}\n//     </LoginContext.Provider>\n//   );\n// };\n\n// const useLoginContext = () => {\n//   return useContext(LoginContext);\n// };\n// export { LoginContextProvider, useLoginContext };","map":{"version":3,"names":[],"sources":["/home/sameer/Desktop/chakraRedux/src/context/LoginContext.js"],"sourcesContent":["// import React, { createContext, useContext, useEffect, useReducer } from \"react\";\n// import reducer from \"../reducer/loginReducer\";\n\n// const initialState = {\n//   // defaultUsers: [\n//   //   { email: \"sameer\", password: \"sa123\" },\n//   //   { email: \"suman\", password: \"su123\" },\n//   //   { email: \"hari\", password: \"ha123\" },\n//   // ],\n//   isLoggedIn: false,\n// };\n\n// const LoginContext = createContext();\n\n// const LoginContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   const handleLogout = () => {\n//     return dispatch({ type: \"LOGOUT\" });\n//   };\n//   useEffect(() => {\n//     console.log(\"loginCheck\", state.isLoggedIn);\n//   }, [state.isLoggedIn]);\n\n//   const handelLoginValidation = (values) => {\n//     return dispatch({ type: \"LOGINVALIDATE\", payload: values });\n//   };\n//   return (\n//     <LoginContext.Provider\n//       value={{ ...state, handelLoginValidation, handleLogout }}\n//     >\n//       {children}\n//     </LoginContext.Provider>\n//   );\n// };\n\n// const useLoginContext = () => {\n//   return useContext(LoginContext);\n// };\n// export { LoginContextProvider, useLoginContext };\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}